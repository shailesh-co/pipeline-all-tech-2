pipeline {
    agent any

    environment {
        FRONT_IMAGE = 'shailesh01/ui-frontend:latest'
    }

    options {
        timestamps()
    }

    stages {
        stage('Clone Git Repository') {
            steps {
                wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'xterm']) {
                    git branch: 'main', url: 'https://github.com/shailesh-co/pipeline-all-tech-2.git'
                }
            }
        }

        stage('Build Frontend Docker Image') {
            steps {
                wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'xterm']) {
                    dir('UI-FrontEnd/sample-ng-project') {
                        script {
                            sh '''
                                # Ensure clean install
                                npm cache clean --force
                                npm install

                                # If Angular CLI is not global, run via npx
                                npx ng build --configuration production
                                
                                # Then build Docker image
                                docker build -t ${FRONT_IMAGE} .
                            '''
                        }
                    }
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'xterm']) {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                        sh '''
                            echo "$PASS" | docker login -u "$USER" --password-stdin
                            docker push $FRONT_IMAGE
                            docker logout
                        '''
                    }
                }
            }
        }

        stage('Deploy to Server via Ansible') {
            steps {
                wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'xterm']) {
                    sh 'ansible-playbook ansible/deploy.yaml -i inventory/hosts'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
            cleanWs()
        }
        failure {
            echo 'Pipeline failed. Please check the error logs above.'
        }
    }
}
